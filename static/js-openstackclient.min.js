"undefined"==typeof osclient&&(osclient={}),osclient.Client=function(){},$.extend(osclient.Client.prototype,{defaultParams:{error:function(e,t,n){console.log(e,t,n)},contentType:"application/json",dataType:"json",method:"GET",type:"GET"},doRequest:function(e){return"method"in e&&!("type"in e)&&(e.type=e.method),"type"in e&&!("method"in e)&&(e.method=e.type),$.ajax($.extend({},this.defaultParams,e))}}),osclient.Keystone=function(e){if(osclient.Client.apply(this,Array.prototype.slice.call(arguments)),0!==arguments.length){if($.extend(this,e),!this.authURL)throw"No authURL supplied";this.apiVersions={},this.userCacheByID={},this.cacheTenantByID={},this.cacheTenantByName={}}},osclient.Keystone.prototype=new osclient.Client,$.extend(osclient.Keystone.prototype,{retrieveVersions:function(){var e=this;return this.apiVersionsDeferred||(this.apiVersionsDeferred=$.Deferred(),this.doRequest({error:function(t){var n;300===t.status?(n=JSON.parse(t.responseText),$(n.versions.values).each(function(t,n){e.apiVersions[n.id]=n}),e.apiVersionsDeferred.resolve(n)):e.apiVersionsDeferred.reject("Failed to receive expected 300 response")},url:this.authURL})),this.apiVersionsDeferred.promise()},authenticatev2_0:function(){var e,t=this,n={auth:{passwordCredentials:{username:this.username,password:this.password}}};if(!(this.token||this.username&&this.password))throw"Neither username and password nor token supplied";return this.tenantID?n.auth.tenantId=this.tenantID:this.tenantName&&(n.auth.tenantName=this.tenantName),e=this.doRequest({data:JSON.stringify(n),method:"POST",processData:!1,url:this.authURL+"/v2.0/tokens"}).promise(),e.done(function(e){t.userID=e.access.user.id,t.token=e.access.token.id,e.access.token.tenant&&(e.access.token.tenant.id&&(t.tenantID=e.access.token.tenant.id),e.access.token.tenant.name&&(t.tenantName=e.access.token.tenant.name)),e.access.serviceCatalog||(t.catalog=e.access.serviceCatalog)}),e},authenticatev3:function(){var e,t=this,n={auth:{identity:{methods:["password"],password:{user:{password:this.password}}}}};if(this.username&&this.domainID)n.auth.identity.password.user.name=this.username,n.auth.identity.password.user.domain={id:this.domainID};else if(this.username&&this.domainName)n.auth.identity.password.user.name=this.username,n.auth.identity.password.user.domain={name:this.domainName};else if(this.userID)n.auth.identity.password.user.id=this.userID;else{if(!this.token)throw"Neither username and domainID nor userID nor token supplied";n={auth:{identity:{methods:["token"],token:{id:this.token}}}}}return e=this.doRequest({data:JSON.stringify(n),method:"POST",processData:!1,url:this.authURL+"/v3/auth/tokens"}).promise(),e.done(function(e,n,i){var s=i.getResponseHeader("X-Subject-Token");s&&(t.token=s),e.token.catalog&&(t.catalog=e.token.catalog),e.token.user&&e.token.user.id&&(t.userID=e.token.user.id)}),e},authenticate:function(){var e=this;return e.authenticateDeferred||(e.authenticateDeferred=e.retrieveVersions().then(function(){var t=$.Deferred();return"v3.0"in e.apiVersions?e.authenticatev3().then(function(){e.findIdentityEndpoints(),t.resolve(e.catalog)}):"v2.0"in e.apiVersions?e.authenticatev2_0().then(function(){e.tenantID&&e.catalog?(e.findIdentityEndpoints(),t.resolve(e.catalog)):e.getTenants().then(function(n){n.length||t.reject("No accessible tenants"),e.setTenantID(n[0].id),e.authenticate2_0().then(function(){keytone.findIdentityEndpoints(),t.resolve(e.catalog)})})}):t.reject("No supported Identity API version found"),t.promise()})),e.authenticateDeferred},findIdentityEndpoints:function(){var e,t,n=this;if("v3.0"in n.apiVersions)e=n.apiVersions["v3.0"].links[0].href;else{if(!("v2.0"in this.apiVersions))throw"No compatible version of the Identity API found";e=n.apiVersions["v2.0"].links[0].href}if(e=e.replace(/\/$/,""),$(this.catalog).each(function(n,i){return $(i.endpoints).each(function(n,s){return $(["url","publicURL","adminURL","internalURL"]).each(function(n,a){if(a in s){var o=s[a].replace(/\/$/,"");o===e&&(t=i)}return!t}),!t}),!t}),!t)throw"No service found with an endpoint URL equal to '"+e+"'";if($(t.endpoints).each(function(e,t){$(["public","admin","internal"]).each(function(e,i){i+"URL"in t?n[i+"URL"]=t[i+"URL"]:"url"in t&&t["interface"]===i&&(n[i+"URL"]=t.url)})}),!n.publicURL||!n.adminURL||!n.internalURL)throw"Missing public, admin or internal URL"},getEndpoint:function(e){var t,n=this,i=void 0;return t=$.Deferred(function(){n.authenticate().done(function(){$(n.catalog).each(function(t,n){return"serviceType"in e&&n.type!==e.serviceType||"serviceName"in e&&n.name!==e.serviceName||($(n.endpoints).each(function(t,n){return"regionName"in e&&n.region!==e.regionName||"endpointID"in e&&n.id!==e.endpointID||"endpointType"in e&&!(e.endpointType+"URL"in n)||("endpointType"in e?i=n[e.endpointType+"URL"]:"publicURL"in n?i=n.publicURL:"adminURL"in n?i=n.adminURL:"internalURL"in n&&(i=n.internalURL)),void 0!==i?!1:("regionName"in e&&n.region!==e.regionName||"endpointID"in e&&n.id!==e.endpointID||"endpointType"in e&&n["interface"]!==e.endpointType||(i=n.url),void 0!==i?!1:void 0)}),void 0===i)?void 0:!1}),i&&t.resolve(i)})}),t.promise()},getToken:function(){return this.token},clearToken:function(){this.token=null,this.catalog=null,this.authenticateDeferred=null},setTenantID:function(e){this.tenantID=e,this.tenantName=null,this.clearToken()},setProjectID:function(){return this.setTenantID.apply(this,arguments)},setTenantName:function(e){this.tenantName=e,this.tenantID=null,this.clearToken()},setProjectName:function(){return this.setTenantName.apply(this,arguments)},getTenants:function(e,t,n){var i,s,a=$.Deferred(),o={};if("v3.0"in this.apiVersions)if(s=this.publicURL,e)s+="/projects",t&&(o.per_page=t),n&&(o.page=n);else{if(!this.userID)throw"Not all tenants requested, and no user ID";if(s+="/users/"+this.userID+"/projects",t||n)throw"Unsupported option"}else{if(!("v2.0"in this.apiVersions))throw"No compatible Identity API";s=(e?this.adminURL:this.publicURL)+"/tenants",void 0!==t&&(o.limit=t),void 0!==n&&(o.marker=n)}return i=this.doRequest({data:o,headers:{"X-Auth-Token":this.token},processData:!0,url:s}).promise(),i.done(function(e){"tenants"in e?a.resolve(e.tenants):"projects"in e&&a.resolve(e.projects)}),a.promise()},getProjects:function(){return this.getTenants.apply(this,arguments)},getUserByID:function(e){var t;if(!this.userCacheByID[e]){if("v3.0"in this.apiVersions)t=this.publicURL;else{if(!("v2.0"in this.apiVersions))throw"No compatible Identity API";t=this.adminURL}this.userCacheByID[e]=this.doRequest({headers:{"X-Auth-Token":this.token},url:t+"/users/"+e}).promise()}return this.userCacheByID[e]},getUserByName:function(e){var t;if("v3.0"in this.apiVersions)t=this.publicURL;else{if(!("v2.0"in this.apiVersions))throw"No compatible Identity API";t=this.adminURL}return this.doRequest({data:{name:e},headers:{"X-Auth-Token":this.token},processData:!0,url:this.publicURL+"/users"}).promise()},getTenantByID:function(e){var t;if(!this.cacheTenantByID[e]){if("v3.0"in this.apiVersions)t=this.publicURL+"/projects";else{if(!("v2.0"in this.apiVersions))throw"No compatible Identity API";t=this.adminURL+"/tenants"}this.cacheTenantByID[e]=this.doRequest({headers:{"X-Auth-Token":this.token},url:t+"/"+e}).promise()}return this.cacheTenantByID[e]},getProjectByID:function(){return this.getTenantByID.apply(this,arguments)},getTenantByName:function(e){var t;if(!this.cacheTenantByName[e]){if("v3.0"in this.apiVersions)t=this.publicURL+"/projects";else{if(!("v2.0"in this.apiVersions))throw"No compatible Identity API";t=this.adminURL+"/tenants"}this.cacheTenantByName[e]=this.doRequest({data:{name:e},headers:{"X-Auth-Token":this.token},processData:!0,url:t}).promise()}return this.cacheTenantByName[e]},getProjectByName:function(){return this.getTenantByName.apply(this,arguments)}});